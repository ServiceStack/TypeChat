[
    {
        "model": "gpt-3.5-turbo",
        "messages": [
            {
                "role": "user",
                "content": "You are a service that translates user requests into programs represented as JSON using the following TypeScript definitions:\n```\n// A program consists of a sequence of function calls that are evaluated in order.\nexport type Program = {\n    \"@steps\": FunctionCall[];\n}\n\n// A function call specifies a function name and a list of argument expressions. Arguments may contain\n// nested function calls and result references.\nexport type FunctionCall = {\n    // Name of the function\n    \"@func\": string;\n    // Arguments for the function, if any\n    \"@args\"?: Expression[];\n};\n\n// An expression is a JSON value, a function call, or a reference to the result of a preceding expression.\nexport type Expression = JsonValue | FunctionCall | ResultReference;\n\n// A JSON value is a string, a number, a boolean, null, an object, or an array. Function calls and result\n// references can be nested in objects and arrays.\nexport type JsonValue = string | number | boolean | null | { [x: string]: Expression } | Expression[];\n\n// A result reference represents the value of an expression from a preceding step.\nexport type ResultReference = {\n    // Index of the previous expression in the \"@steps\" array\n    \"@ref\": number;\n};\n```\nThe programs can call functions from the API defined in the following TypeScript definitions:\n```\n// This is a schema for writing programs that evaluate expressions.\r\n\r\nexport type API = {\r\n    // Add two numbers\r\n    add(x: number, y: number): number;\r\n    // Subtract two numbers\r\n    sub(x: number, y: number): number;\r\n    // Multiply two numbers\r\n    mul(x: number, y: number): number;\r\n    // Divide two numbers\r\n    div(x: number, y: number): number;\r\n    // Negate a number\r\n    neg(x: number): number;\r\n    // Identity function\r\n    id(x: number): number;\r\n    // Unknown request\r\n    unknown(text: string): number;\r\n}\r\n```\nThe following is a user request:\n\"\"\"\nmultiply two by three, then multiply four by five, then sum the results\n\"\"\"\nThe following is the user request translated into a JSON program object with 2 spaces of indentation and no properties with the value undefined:\n"
            }
        ],
        "temperature": 0,
        "n": 1
    },
    {
        "id": "chatcmpl-7k67a5KAfvitT0GXXVBW9EaNEPoJt",
        "object": "chat.completion",
        "created": 1691220974,
        "model": "gpt-3.5-turbo-0613",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "{\n  \"@steps\": [\n    {\n      \"@func\": \"mul\",\n      \"@args\": [\n        2,\n        3\n      ]\n    },\n    {\n      \"@func\": \"mul\",\n      \"@args\": [\n        4,\n        5\n      ]\n    },\n    {\n      \"@func\": \"add\",\n      \"@args\": [\n        {\n          \"@ref\": 0\n        },\n        {\n          \"@ref\": 1\n        }\n      ]\n    }\n  ]\n}"
                },
                "finish_reason": "stop"
            }
        ],
        "usage": {
            "prompt_tokens": 464,
            "completion_tokens": 101,
            "total_tokens": 565
        }
    },
    {
        "request": "multiply two by three, then multiply four by five, then sum the results",
        "response": {
            "@steps": [
                {
                    "@func": "mul",
                    "@args": [
                        2,
                        3
                    ]
                },
                {
                    "@func": "mul",
                    "@args": [
                        4,
                        5
                    ]
                },
                {
                    "@func": "add",
                    "@args": [
                        {
                            "@ref": 0
                        },
                        {
                            "@ref": 1
                        }
                    ]
                }
            ]
        }
    }
]